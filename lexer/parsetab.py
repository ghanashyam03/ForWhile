
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASK ATTACH COLOR CREATE ELSE END EQ GT IDENTIFIER IF LPAREN LT NEQ NUMBER PLUS REPEAT RPAREN SAY SET STRING TIMES TOprogram : statementsstatements : statements statement\n                  | statementstatement : set_statement\n                 | create_statement\n                 | attach_statement\n                 | repeat_statement\n                 | if_statement\n                 | ask_statement\n                 | say_statementset_statement : SET IDENTIFIER IDENTIFIER TO expressioncreate_statement : CREATE IDENTIFIER IDENTIFIERattach_statement : ATTACH IDENTIFIER TO IDENTIFIERrepeat_statement : REPEAT NUMBER TIMES statements END REPEATif_statement : IF condition statements ELSE statements END IFask_statement : ASK STRING SET IDENTIFIER IDENTIFIER TO LPAREN IDENTIFIER RPARENsay_statement : SAY expressioncondition : IDENTIFIER IDENTIFIER comparison_op expressioncomparison_op : GT\n                     | LT\n                     | EQ\n                     | NEQexpression : STRING\n                  | NUMBER\n                  | COLOR\n                  | IDENTIFIER\n                  | IDENTIFIER IDENTIFIER\n                  | expression PLUS expression'
    
_lr_action_items = {'SET':([0,2,3,4,5,6,7,8,9,10,18,23,25,26,27,28,29,30,32,34,35,39,41,42,43,50,51,53,54,56,59,62,],[11,11,-3,-4,-5,-6,-7,-8,-9,-10,-2,11,37,-17,-23,-24,-25,-26,-12,11,11,-27,-13,11,11,-28,-11,11,-18,-14,-15,-16,]),'CREATE':([0,2,3,4,5,6,7,8,9,10,18,23,26,27,28,29,30,32,34,35,39,41,42,43,50,51,53,54,56,59,62,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-2,12,-17,-23,-24,-25,-26,-12,12,12,-27,-13,12,12,-28,-11,12,-18,-14,-15,-16,]),'ATTACH':([0,2,3,4,5,6,7,8,9,10,18,23,26,27,28,29,30,32,34,35,39,41,42,43,50,51,53,54,56,59,62,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-2,13,-17,-23,-24,-25,-26,-12,13,13,-27,-13,13,13,-28,-11,13,-18,-14,-15,-16,]),'REPEAT':([0,2,3,4,5,6,7,8,9,10,18,23,26,27,28,29,30,32,34,35,39,41,42,43,50,51,52,53,54,56,59,62,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-2,14,-17,-23,-24,-25,-26,-12,14,14,-27,-13,14,14,-28,-11,56,14,-18,-14,-15,-16,]),'IF':([0,2,3,4,5,6,7,8,9,10,18,23,26,27,28,29,30,32,34,35,39,41,42,43,50,51,53,54,56,57,59,62,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-2,15,-17,-23,-24,-25,-26,-12,15,15,-27,-13,15,15,-28,-11,15,-18,-14,59,-15,-16,]),'ASK':([0,2,3,4,5,6,7,8,9,10,18,23,26,27,28,29,30,32,34,35,39,41,42,43,50,51,53,54,56,59,62,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-2,16,-17,-23,-24,-25,-26,-12,16,16,-27,-13,16,16,-28,-11,16,-18,-14,-15,-16,]),'SAY':([0,2,3,4,5,6,7,8,9,10,18,23,26,27,28,29,30,32,34,35,39,41,42,43,50,51,53,54,56,59,62,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-2,17,-17,-23,-24,-25,-26,-12,17,17,-27,-13,17,17,-28,-11,17,-18,-14,-15,-16,]),'$end':([1,2,3,4,5,6,7,8,9,10,18,26,27,28,29,30,32,39,41,50,51,56,59,62,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-2,-17,-23,-24,-25,-26,-12,-27,-13,-28,-11,-14,-15,-16,]),'ELSE':([3,4,5,6,7,8,9,10,18,26,27,28,29,30,32,35,39,41,50,51,56,59,62,],[-3,-4,-5,-6,-7,-8,-9,-10,-2,-17,-23,-24,-25,-26,-12,43,-27,-13,-28,-11,-14,-15,-16,]),'END':([3,4,5,6,7,8,9,10,18,26,27,28,29,30,32,39,41,42,50,51,53,56,59,62,],[-3,-4,-5,-6,-7,-8,-9,-10,-2,-17,-23,-24,-25,-26,-12,-27,-13,52,-28,-11,57,-14,-15,-16,]),'IDENTIFIER':([11,12,13,15,17,19,20,24,30,33,37,38,40,44,45,46,47,48,49,60,],[19,20,21,24,30,31,32,36,39,41,49,30,30,30,-19,-20,-21,-22,55,61,]),'NUMBER':([14,17,38,40,44,45,46,47,48,],[22,28,28,28,28,-19,-20,-21,-22,]),'STRING':([16,17,38,40,44,45,46,47,48,],[25,27,27,27,27,-19,-20,-21,-22,]),'COLOR':([17,38,40,44,45,46,47,48,],[29,29,29,29,-19,-20,-21,-22,]),'TO':([21,31,55,],[33,40,58,]),'TIMES':([22,],[34,]),'PLUS':([26,27,28,29,30,39,50,51,54,],[38,-23,-24,-25,-26,-27,38,38,38,]),'GT':([36,],[45,]),'LT':([36,],[46,]),'EQ':([36,],[47,]),'NEQ':([36,],[48,]),'LPAREN':([58,],[60,]),'RPAREN':([61,],[62,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,23,34,43,],[2,35,42,53,]),'statement':([0,2,23,34,35,42,43,53,],[3,18,3,3,18,18,3,18,]),'set_statement':([0,2,23,34,35,42,43,53,],[4,4,4,4,4,4,4,4,]),'create_statement':([0,2,23,34,35,42,43,53,],[5,5,5,5,5,5,5,5,]),'attach_statement':([0,2,23,34,35,42,43,53,],[6,6,6,6,6,6,6,6,]),'repeat_statement':([0,2,23,34,35,42,43,53,],[7,7,7,7,7,7,7,7,]),'if_statement':([0,2,23,34,35,42,43,53,],[8,8,8,8,8,8,8,8,]),'ask_statement':([0,2,23,34,35,42,43,53,],[9,9,9,9,9,9,9,9,]),'say_statement':([0,2,23,34,35,42,43,53,],[10,10,10,10,10,10,10,10,]),'condition':([15,],[23,]),'expression':([17,38,40,44,],[26,50,51,54,]),'comparison_op':([36,],[44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','simplelang_parser.py',5),
  ('statements -> statements statement','statements',2,'p_statements','simplelang_parser.py',9),
  ('statements -> statement','statements',1,'p_statements','simplelang_parser.py',10),
  ('statement -> set_statement','statement',1,'p_statement','simplelang_parser.py',17),
  ('statement -> create_statement','statement',1,'p_statement','simplelang_parser.py',18),
  ('statement -> attach_statement','statement',1,'p_statement','simplelang_parser.py',19),
  ('statement -> repeat_statement','statement',1,'p_statement','simplelang_parser.py',20),
  ('statement -> if_statement','statement',1,'p_statement','simplelang_parser.py',21),
  ('statement -> ask_statement','statement',1,'p_statement','simplelang_parser.py',22),
  ('statement -> say_statement','statement',1,'p_statement','simplelang_parser.py',23),
  ('set_statement -> SET IDENTIFIER IDENTIFIER TO expression','set_statement',5,'p_set_statement','simplelang_parser.py',27),
  ('create_statement -> CREATE IDENTIFIER IDENTIFIER','create_statement',3,'p_create_statement','simplelang_parser.py',31),
  ('attach_statement -> ATTACH IDENTIFIER TO IDENTIFIER','attach_statement',4,'p_attach_statement','simplelang_parser.py',35),
  ('repeat_statement -> REPEAT NUMBER TIMES statements END REPEAT','repeat_statement',6,'p_repeat_statement','simplelang_parser.py',39),
  ('if_statement -> IF condition statements ELSE statements END IF','if_statement',7,'p_if_statement','simplelang_parser.py',43),
  ('ask_statement -> ASK STRING SET IDENTIFIER IDENTIFIER TO LPAREN IDENTIFIER RPAREN','ask_statement',9,'p_ask_statement','simplelang_parser.py',47),
  ('say_statement -> SAY expression','say_statement',2,'p_say_statement','simplelang_parser.py',51),
  ('condition -> IDENTIFIER IDENTIFIER comparison_op expression','condition',4,'p_condition','simplelang_parser.py',55),
  ('comparison_op -> GT','comparison_op',1,'p_comparison_op','simplelang_parser.py',59),
  ('comparison_op -> LT','comparison_op',1,'p_comparison_op','simplelang_parser.py',60),
  ('comparison_op -> EQ','comparison_op',1,'p_comparison_op','simplelang_parser.py',61),
  ('comparison_op -> NEQ','comparison_op',1,'p_comparison_op','simplelang_parser.py',62),
  ('expression -> STRING','expression',1,'p_expression','simplelang_parser.py',66),
  ('expression -> NUMBER','expression',1,'p_expression','simplelang_parser.py',67),
  ('expression -> COLOR','expression',1,'p_expression','simplelang_parser.py',68),
  ('expression -> IDENTIFIER','expression',1,'p_expression','simplelang_parser.py',69),
  ('expression -> IDENTIFIER IDENTIFIER','expression',2,'p_expression','simplelang_parser.py',70),
  ('expression -> expression PLUS expression','expression',3,'p_expression','simplelang_parser.py',71),
]
